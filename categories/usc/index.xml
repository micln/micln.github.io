<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>usc on 在水异方</title>
    <link>/categories/usc/</link>
    <description>Recent content in usc on 在水异方</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <copyright>©{year} 在水异方</copyright>
    <lastBuildDate>Wed, 08 Oct 2014 10:09:31 +0800</lastBuildDate><atom:link href="/categories/usc/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>USC 1329 Decode 坑坑坑gets</title>
      <link>/post/csdn/usc-1329-decode-%E5%9D%91%E5%9D%91%E5%9D%91gets/</link>
      <pubDate>Wed, 08 Oct 2014 10:09:31 +0800</pubDate>
      
      <guid>/post/csdn/usc-1329-decode-%E5%9D%91%E5%9D%91%E5%9D%91gets/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 其实一贯都是用string来着。。 其实后来看刘汝佳的书又喜欢上了fgets然后一路过关斩将来着。。 这</description>
    </item>
    
    <item>
      <title>UVa 437 The Tower of Babylon</title>
      <link>/post/csdn/uva-437-the-tower-of-babylon/</link>
      <pubDate>Tue, 30 Sep 2014 17:20:25 +0800</pubDate>
      
      <guid>/post/csdn/uva-437-the-tower-of-babylon/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 好久不水 开始深入算法了。 题目传送门 题目其实很简单，暴搜都可以，网上最多的解法都是记忆化搜索，效率应该</description>
    </item>
    
    <item>
      <title>UVa 10129 Play on Words</title>
      <link>/post/csdn/uva-10129-play-on-words/</link>
      <pubDate>Thu, 14 Aug 2014 20:54:58 +0800</pubDate>
      
      <guid>/post/csdn/uva-10129-play-on-words/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 好久不写代码果然手会生成屎 题目在 poj上也有 题意就是给你一堆单词，按首位顺序排列起来，问你有没有解。</description>
    </item>
    
    <item>
      <title>ubuntu 安装 wps.deb</title>
      <link>/post/csdn/ubuntu-%E5%AE%89%E8%A3%85-wps.deb/</link>
      <pubDate>Mon, 21 Jul 2014 14:16:52 +0800</pubDate>
      
      <guid>/post/csdn/ubuntu-%E5%AE%89%E8%A3%85-wps.deb/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 首先到官网下载最新版本，由于官网只提供了32bit版本，所以只能下载这个。 wget http://wdl1.cache.wps.cn/wps/download/Linux/unstable/wps-office_8.1.0.3724~b1p2_i386.deb 安装 sudo dpkg -i wps-office_8.1.0.3724~b1p2_i386.deb 这个时候如</description>
    </item>
    
    <item>
      <title>POJ 1017 Packets 悼念死去的模拟</title>
      <link>/post/csdn/poj-1017-packets-%E6%82%BC%E5%BF%B5%E6%AD%BB%E5%8E%BB%E7%9A%84%E6%A8%A1%E6%8B%9F/</link>
      <pubDate>Fri, 18 Jul 2014 18:51:34 +0800</pubDate>
      
      <guid>/post/csdn/poj-1017-packets-%E6%82%BC%E5%BF%B5%E6%AD%BB%E5%8E%BB%E7%9A%84%E6%A8%A1%E6%8B%9F/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 题目链接 题目很水，纯模拟 麻烦的地方在于，会面临多次用小件填充大件剩余。 最开始觉得不同大小时决策不一样</description>
    </item>
    
    <item>
      <title>LED点阵的基本操作探索</title>
      <link>/post/csdn/led%E7%82%B9%E9%98%B5%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C%E6%8E%A2%E7%B4%A2/</link>
      <pubDate>Mon, 07 Apr 2014 21:13:59 +0800</pubDate>
      
      <guid>/post/csdn/led%E7%82%B9%E9%98%B5%E7%9A%84%E5%9F%BA%E6%9C%AC%E6%93%8D%E4%BD%9C%E6%8E%A2%E7%B4%A2/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 以 CL1588BS 8*8点阵 为例 引脚说明 这个家伙有上下两排共16个引脚，每个引脚负责一行（或一列的信号）。 当 行为高</description>
    </item>
    
    <item>
      <title>POJ 1273 Drainage Ditches 网络流模版</title>
      <link>/post/csdn/poj-1273-drainage-ditches-%E7%BD%91%E7%BB%9C%E6%B5%81%E6%A8%A1%E7%89%88/</link>
      <pubDate>Wed, 02 Apr 2014 22:57:45 +0800</pubDate>
      
      <guid>/post/csdn/poj-1273-drainage-ditches-%E7%BD%91%E7%BB%9C%E6%B5%81%E6%A8%A1%E7%89%88/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 题目传送门 网络流模版题，本想水一水，莫想到因为没好好看题给跪了。 题目大意就是 给你一堆水洼地，还有一些</description>
    </item>
    
    <item>
      <title>HDU 3887 Counting Offspring dfs序的运用 | 非递归</title>
      <link>/post/csdn/hdu-3887-counting-offspring-dfs%E5%BA%8F%E7%9A%84%E8%BF%90%E7%94%A8-%E9%9D%9E%E9%80%92%E5%BD%92/</link>
      <pubDate>Mon, 31 Mar 2014 21:59:58 +0800</pubDate>
      
      <guid>/post/csdn/hdu-3887-counting-offspring-dfs%E5%BA%8F%E7%9A%84%E8%BF%90%E7%94%A8-%E9%9D%9E%E9%80%92%E5%BD%92/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 题目链接 一天时间做了两道 dfs序 的题， 都是 WA 不停，最后一道改成 100W的数组，一道改成双向边就AC了</description>
    </item>
    
    <item>
      <title>POJ 3321 Apple Tree dfs序的应用</title>
      <link>/post/csdn/poj-3321-apple-tree-dfs%E5%BA%8F%E7%9A%84%E5%BA%94%E7%94%A8/</link>
      <pubDate>Mon, 31 Mar 2014 09:56:24 +0800</pubDate>
      
      <guid>/post/csdn/poj-3321-apple-tree-dfs%E5%BA%8F%E7%9A%84%E5%BA%94%E7%94%A8/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 题目链接 dfs序 说来很简单，却从来没有想到过。必须得深刻反省一下到底自己学了些啥。 题目大意是给你一棵</description>
    </item>
    
    <item>
      <title>POJ 3461 Oulipo KMP练习</title>
      <link>/post/csdn/poj-3461-oulipo-kmp%E7%BB%83%E4%B9%A0/</link>
      <pubDate>Mon, 31 Mar 2014 09:34:47 +0800</pubDate>
      
      <guid>/post/csdn/poj-3461-oulipo-kmp%E7%BB%83%E4%B9%A0/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 题目链接 题目很长，其实就是字符串匹配。 所以，权当练习 KMP #include &amp;lt;cstdio&amp;gt; #include &amp;lt;cstring&amp;gt; #define MB 10101 #define MA 1000100 char a[MA],b[MB]; int next[MB]; void prekmp(char* b) { next[0]=-1; int j=-1; for (</description>
    </item>
    
    <item>
      <title>webkit webApp 开发技术要点总结</title>
      <link>/post/csdn/webkit-webapp-%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF%E8%A6%81%E7%82%B9%E6%80%BB%E7%BB%93/</link>
      <pubDate>Sat, 29 Mar 2014 12:29:31 +0800</pubDate>
      
      <guid>/post/csdn/webkit-webapp-%E5%BC%80%E5%8F%91%E6%8A%80%E6%9C%AF%E8%A6%81%E7%82%B9%E6%80%BB%E7%BB%93/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 原文链接 如果你是一名前端er,又想在移动设备上开发出自己的应用，那怎么实现呢？幸好，webkit内核</description>
    </item>
    
    <item>
      <title>李开复：算法的力量 （完整版）</title>
      <link>/post/csdn/%E6%9D%8E%E5%BC%80%E5%A4%8D%E7%AE%97%E6%B3%95%E7%9A%84%E5%8A%9B%E9%87%8F-%E5%AE%8C%E6%95%B4%E7%89%88/</link>
      <pubDate>Sun, 22 Dec 2013 20:24:56 +0800</pubDate>
      
      <guid>/post/csdn/%E6%9D%8E%E5%BC%80%E5%A4%8D%E7%AE%97%E6%B3%95%E7%9A%84%E5%8A%9B%E9%87%8F-%E5%AE%8C%E6%95%B4%E7%89%88/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 算法的力量 李开复 2006年5月 算法是计算机科学领域最重要的基石之一，但却受到了国内一些程序员的冷落。</description>
    </item>
    
    <item>
      <title>2013~2014 第一学期课件整理</title>
      <link>/post/csdn/2013~2014-%E7%AC%AC%E4%B8%80%E5%AD%A6%E6%9C%9F%E8%AF%BE%E4%BB%B6%E6%95%B4%E7%90%86/</link>
      <pubDate>Sat, 21 Dec 2013 23:48:31 +0800</pubDate>
      
      <guid>/post/csdn/2013~2014-%E7%AC%AC%E4%B8%80%E5%AD%A6%E6%9C%9F%E8%AF%BE%E4%BB%B6%E6%95%B4%E7%90%86/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 坑爹的电信网，服务器访问不上了。 大家先将就一下吧。 基础班 时间 课件 详情 主讲 10.26 第零讲 ACM介绍 张慧仁 10.31 第</description>
    </item>
    
    <item>
      <title>整理一下Go环境需要的东西（水帖~）</title>
      <link>/post/csdn/%E6%95%B4%E7%90%86%E4%B8%80%E4%B8%8Bgo%E7%8E%AF%E5%A2%83%E9%9C%80%E8%A6%81%E7%9A%84%E4%B8%9C%E8%A5%BF%E6%B0%B4%E5%B8%96~/</link>
      <pubDate>Thu, 05 Dec 2013 10:01:51 +0800</pubDate>
      
      <guid>/post/csdn/%E6%95%B4%E7%90%86%E4%B8%80%E4%B8%8Bgo%E7%8E%AF%E5%A2%83%E9%9C%80%E8%A6%81%E7%9A%84%E4%B8%9C%E8%A5%BF%E6%B0%B4%E5%B8%96~/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 先声明 不是搭建教程。。 重做了个系统要重新搭环境，结果原来的很多站点的东西都没了，害我辛辛苦苦折腾了好</description>
    </item>
    
    <item>
      <title>USACO Section 1.4.3 The Clocks</title>
      <link>/post/csdn/usaco-section-1.4.3-the-clocks/</link>
      <pubDate>Thu, 28 Nov 2013 16:37:01 +0800</pubDate>
      
      <guid>/post/csdn/usaco-section-1.4.3-the-clocks/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 题目 The Clocks IOI&#39;94 - Day 2 Consider nine clocks arranged in a 3x3 array thusly: |-------| |-------| |-------| | | | | | | | |---O | |---O | | O | | | | | | | |-------| |-------| |-------| A B C |&amp;mdash;&amp;mdash;-| |&amp;mdash;&amp;mdash;-| |&amp;mdash;&amp;mdash;-| |</description>
    </item>
    
    <item>
      <title>POJ 3041 Asteroids 匈牙利算法 二分图最大匹配</title>
      <link>/post/csdn/poj-3041-asteroids-%E5%8C%88%E7%89%99%E5%88%A9%E7%AE%97%E6%B3%95-%E4%BA%8C%E5%88%86%E5%9B%BE%E6%9C%80%E5%A4%A7%E5%8C%B9%E9%85%8D/</link>
      <pubDate>Fri, 15 Nov 2013 16:23:18 +0800</pubDate>
      
      <guid>/post/csdn/poj-3041-asteroids-%E5%8C%88%E7%89%99%E5%88%A9%E7%AE%97%E6%B3%95-%E4%BA%8C%E5%88%86%E5%9B%BE%E6%9C%80%E5%A4%A7%E5%8C%B9%E9%85%8D/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 题目链接： http://poj.org/problem?id=3041 看起来像个 DP 神马的。竟然是二分图匹配。。 看着啊，行与行之间相互独立，一个行可以就炸掉很多</description>
    </item>
    
    <item>
      <title>国际程序设计大赛一等奖作品欣赏</title>
      <link>/post/csdn/%E5%9B%BD%E9%99%85%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E5%A4%A7%E8%B5%9B%E4%B8%80%E7%AD%89%E5%A5%96%E4%BD%9C%E5%93%81%E6%AC%A3%E8%B5%8F/</link>
      <pubDate>Wed, 30 Oct 2013 18:50:14 +0800</pubDate>
      
      <guid>/post/csdn/%E5%9B%BD%E9%99%85%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E5%A4%A7%E8%B5%9B%E4%B8%80%E7%AD%89%E5%A5%96%E4%BD%9C%E5%93%81%E6%AC%A3%E8%B5%8F/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 国际程序设计大赛一等奖作品这个程序(omni.com)是97年的Mekka ’97 4K Intro比赛的一</description>
    </item>
    
    <item>
      <title>ufw 相关</title>
      <link>/post/csdn/ufw-%E7%9B%B8%E5%85%B3/</link>
      <pubDate>Tue, 29 Oct 2013 13:28:08 +0800</pubDate>
      
      <guid>/post/csdn/ufw-%E7%9B%B8%E5%85%B3/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 有些东西，死活都记不住。。 安装 ufw sudo apt-get install ufw 启用 ufw sudo ufw enable 全局限制访问 sudo ufw default deny 打开端口 sudo ufw allow 22 开放/禁止 IP</description>
    </item>
    
    <item>
      <title>ubuntu 安装 HUSTOJ</title>
      <link>/post/csdn/ubuntu-%E5%AE%89%E8%A3%85-hustoj/</link>
      <pubDate>Wed, 16 Oct 2013 01:46:40 +0800</pubDate>
      
      <guid>/post/csdn/ubuntu-%E5%AE%89%E8%A3%85-hustoj/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 安装好 LAMP 环境 方法： http://blog.csdn.net/kzzhr/article/details/12755671 下载 HUSTOJ HUSTOJ 主页 http://code.google.com/p/hustoj/ 我下载了 安装包 install.rxxxx.tar.gz 上传至服务器 #scp -r /home/foo/isntall foo@xxx.xx.xxx.xxx:/var/www 安装中的那些事儿～ install/README 中有详细的</description>
    </item>
    
    <item>
      <title>LAMP 的搭建</title>
      <link>/post/csdn/lamp-%E7%9A%84%E6%90%AD%E5%BB%BA/</link>
      <pubDate>Tue, 15 Oct 2013 21:13:16 +0800</pubDate>
      
      <guid>/post/csdn/lamp-%E7%9A%84%E6%90%AD%E5%BB%BA/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 用了无数次的XAMPP，终于自己搭一次了。。。。 安装 Linux 我装的是ubuntu。。 安装 Apache2 apt-get install apache2 装好之后，</description>
    </item>
    
    <item>
      <title>【非技术贴】记湖南省第九届程序设计大赛</title>
      <link>/post/csdn/%E9%9D%9E%E6%8A%80%E6%9C%AF%E8%B4%B4%E8%AE%B0%E6%B9%96%E5%8D%97%E7%9C%81%E7%AC%AC%E4%B9%9D%E5%B1%8A%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E5%A4%A7%E8%B5%9B/</link>
      <pubDate>Tue, 15 Oct 2013 01:27:15 +0800</pubDate>
      
      <guid>/post/csdn/%E9%9D%9E%E6%8A%80%E6%9C%AF%E8%B4%B4%E8%AE%B0%E6%B9%96%E5%8D%97%E7%9C%81%E7%AC%AC%E4%B9%9D%E5%B1%8A%E7%A8%8B%E5%BA%8F%E8%AE%BE%E8%AE%A1%E5%A4%A7%E8%B5%9B/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 昨天诸事不顺，看来还是可以攒点人品。 先说说比赛过程吧（这个比较有价值但很容易忘记） 继续昨天的诸事不顺</description>
    </item>
    
    <item>
      <title>Longest Ordered Subsequence   O(nlogn)解法 STL</title>
      <link>/post/csdn/longest-ordered-subsequence-onlogn%E8%A7%A3%E6%B3%95-stl/</link>
      <pubDate>Wed, 02 Oct 2013 23:11:58 +0800</pubDate>
      
      <guid>/post/csdn/longest-ordered-subsequence-onlogn%E8%A7%A3%E6%B3%95-stl/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 维护一个单调队列，对于每一个新的元素： 如果大于队尾元素，补在后面； 否则替换掉最小的大于它的数，这里用</description>
    </item>
    
    <item>
      <title>Java for ACM 小结</title>
      <link>/post/csdn/java-for-acm-%E5%B0%8F%E7%BB%93/</link>
      <pubDate>Wed, 25 Sep 2013 20:44:59 +0800</pubDate>
      
      <guid>/post/csdn/java-for-acm-%E5%B0%8F%E7%BB%93/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 一、提交格式代码 import java.util.*; public class Main{ public static void main(String[] args){ Scanner cin = new Scanner(System.in)); } } 二、输入 cin.hasNext() 或 cin.hasNextInt() 或 cin.hasNextDouble() // 判断是否有下一个输入可以用 int n</description>
    </item>
    
    <item>
      <title>点集配对问题   集合DP 按位DP</title>
      <link>/post/csdn/%E7%82%B9%E9%9B%86%E9%85%8D%E5%AF%B9%E9%97%AE%E9%A2%98-%E9%9B%86%E5%90%88dp-%E6%8C%89%E4%BD%8Ddp/</link>
      <pubDate>Sun, 22 Sep 2013 12:53:49 +0800</pubDate>
      
      <guid>/post/csdn/%E7%82%B9%E9%9B%86%E9%85%8D%E5%AF%B9%E9%97%AE%E9%A2%98-%E9%9B%86%E5%90%88dp-%E6%8C%89%E4%BD%8Ddp/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 以前就开始看刘汝佳的白皮书了，不过眼高手低，没有码过，发现问题好多。于是开始敲一敲。 题意： 空间有n个</description>
    </item>
    
    <item>
      <title>notonlysuccess 线段树 高人推荐</title>
      <link>/post/csdn/notonlysuccess-%E7%BA%BF%E6%AE%B5%E6%A0%91-%E9%AB%98%E4%BA%BA%E6%8E%A8%E8%8D%90/</link>
      <pubDate>Sat, 31 Aug 2013 23:37:50 +0800</pubDate>
      
      <guid>/post/csdn/notonlysuccess-%E7%BA%BF%E6%AE%B5%E6%A0%91-%E9%AB%98%E4%BA%BA%E6%8E%A8%E8%8D%90/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 很早前写的那篇线段树专辑至今一直是本博客阅读点击量最大的一片文章,当时觉得挺自豪的,还去pku打广告</description>
    </item>
    
    <item>
      <title>RMQ with Shifts 线段树基基础</title>
      <link>/post/csdn/rmq-with-shifts-%E7%BA%BF%E6%AE%B5%E6%A0%91%E5%9F%BA%E5%9F%BA%E7%A1%80/</link>
      <pubDate>Thu, 22 Aug 2013 00:11:02 +0800</pubDate>
      
      <guid>/post/csdn/rmq-with-shifts-%E7%BA%BF%E6%AE%B5%E6%A0%91%E5%9F%BA%E5%9F%BA%E7%A1%80/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 思路 看上去是个线段树，不过每个元素都移动，树结构本身无法实现这个功能，只能一个一个的修改，但是里面的</description>
    </item>
    
    <item>
      <title>HOJ 2651 PIE</title>
      <link>/post/csdn/hoj-2651-pie/</link>
      <pubDate>Thu, 27 Jun 2013 16:56:29 +0800</pubDate>
      
      <guid>/post/csdn/hoj-2651-pie/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 题目： http://acm.hit.edu.cn/hoj/problem/view?id=2651 很简单的二分枚举， 要注意的是 1、一共是 f+1 个人（包括他自己） 2、精度问题。。被吭了好久，我把面</description>
    </item>
    
    <item>
      <title>HDOJ 4152 ZZY’s Dilemma</title>
      <link>/post/csdn/hdoj-4152-zzys-dilemma/</link>
      <pubDate>Thu, 27 Jun 2013 02:38:45 +0800</pubDate>
      
      <guid>/post/csdn/hdoj-4152-zzys-dilemma/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 题目： http://acm.hdu.edu.cn/showproblem.php?pid=4152 队长大人给某菜鸟赛出的题，但是却让我傻了半天。 裸暴力，由于数据弱，我直接用了位运算标记，其实</description>
    </item>
    
    <item>
      <title>ZOJ 3203 Light Bulb</title>
      <link>/post/csdn/zoj-3203-light-bulb/</link>
      <pubDate>Thu, 27 Jun 2013 02:34:39 +0800</pubDate>
      
      <guid>/post/csdn/zoj-3203-light-bulb/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 题目： http://openoj.awaysoft.com:8080/judge/problem/viewProblem.action?id=14179 三分入门题目 三分： 区间上求凸（凹）点时，把区间ad分为 abcd 其中 b = ( a+d) / 2 ; c = ( b + d) / 2; 比</description>
    </item>
    
    <item>
      <title>WWDC，苹果的野心</title>
      <link>/post/csdn/wwdc%E8%8B%B9%E6%9E%9C%E7%9A%84%E9%87%8E%E5%BF%83/</link>
      <pubDate>Sat, 15 Jun 2013 10:28:07 +0800</pubDate>
      
      <guid>/post/csdn/wwdc%E8%8B%B9%E6%9E%9C%E7%9A%84%E9%87%8E%E5%BF%83/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 原题：《 WWDC2013，苹果向世界宣战 》，觉得有些太大了就撤掉了，直到第二天36Kr的报道也使用类</description>
    </item>
    
    <item>
      <title>区间插入求和  —  线段树入门（二）</title>
      <link>/post/csdn/%E5%8C%BA%E9%97%B4%E6%8F%92%E5%85%A5%E6%B1%82%E5%92%8C-%E7%BA%BF%E6%AE%B5%E6%A0%91%E5%85%A5%E9%97%A8%E4%BA%8C/</link>
      <pubDate>Wed, 29 May 2013 11:29:08 +0800</pubDate>
      
      <guid>/post/csdn/%E5%8C%BA%E9%97%B4%E6%8F%92%E5%85%A5%E6%B1%82%E5%92%8C-%E7%BA%BF%E6%AE%B5%E6%A0%91%E5%85%A5%E9%97%A8%E4%BA%8C/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 题目 题目描述 Description 给你N个数，有两种操作： 1：给区间[a,b]的所有数增加X 2：询问区间[a,b]的数的</description>
    </item>
    
    <item>
      <title>数列操作  —  线段树入门</title>
      <link>/post/csdn/%E6%95%B0%E5%88%97%E6%93%8D%E4%BD%9C-%E7%BA%BF%E6%AE%B5%E6%A0%91%E5%85%A5%E9%97%A8/</link>
      <pubDate>Tue, 28 May 2013 22:42:10 +0800</pubDate>
      
      <guid>/post/csdn/%E6%95%B0%E5%88%97%E6%93%8D%E4%BD%9C-%E7%BA%BF%E6%AE%B5%E6%A0%91%E5%85%A5%E9%97%A8/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 题目 题目描述 Description 一行N个方格，开始每个格子里都有一个整数。现在动态地提出一些问题和修改：提问的形式是求</description>
    </item>
    
    <item>
      <title>CSDN模版修改</title>
      <link>/post/csdn/csdn%E6%A8%A1%E7%89%88%E4%BF%AE%E6%94%B9/</link>
      <pubDate>Sat, 25 May 2013 01:30:49 +0800</pubDate>
      
      <guid>/post/csdn/csdn%E6%A8%A1%E7%89%88%E4%BF%AE%E6%94%B9/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 序言 首先，你应该可以看到这个页面跟一般的CSDN页面不相同。这也是我们本文的目的。 必须承认，很多IT</description>
    </item>
    
    <item>
      <title>5611AH 数码管 引脚图</title>
      <link>/post/csdn/5611ah-%E6%95%B0%E7%A0%81%E7%AE%A1-%E5%BC%95%E8%84%9A%E5%9B%BE/</link>
      <pubDate>Fri, 24 May 2013 17:52:31 +0800</pubDate>
      
      <guid>/post/csdn/5611ah-%E6%95%B0%E7%A0%81%E7%AE%A1-%E5%BC%95%E8%84%9A%E5%9B%BE/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 arduino套装，给了个5611AH的数码管。在网上找不到现成的引脚图，无奈只好自己画了。初学ar</description>
    </item>
    
    <item>
      <title>USACO Section 1.3.6 Prime Cryptarithm</title>
      <link>/post/csdn/usaco-section-1.3.6-prime-cryptarithm/</link>
      <pubDate>Wed, 22 May 2013 11:07:06 +0800</pubDate>
      
      <guid>/post/csdn/usaco-section-1.3.6-prime-cryptarithm/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 题目 Prime Cryptarithm The following cryptarithm is a multiplication problem that can be solved by substituting digits from a specified set of N digits into the positions marked with *. If the set of prime digits {2,3,5,7} is selected, the cryptarithm is called a PRIME CRYPTARITHM. * * *</description>
    </item>
    
    <item>
      <title>USACO Section 1.3.5 Calf Flac</title>
      <link>/post/csdn/usaco-section-1.3.5-calf-flac/</link>
      <pubDate>Wed, 22 May 2013 11:03:07 +0800</pubDate>
      
      <guid>/post/csdn/usaco-section-1.3.5-calf-flac/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 题目 Calf Flac It is said that if you give an infinite number of cows an infinite number of heavy-duty laptops (with very large keys), that they will ultimately produce all the world&#39;s great palindromes. Your job will be to detect these bovine beauties. Ignore punctuation, whitespace, numbers, and</description>
    </item>
    
    <item>
      <title>USACO Section 1.3.3 Barn Repair</title>
      <link>/post/csdn/usaco-section-1.3.3-barn-repair/</link>
      <pubDate>Wed, 22 May 2013 10:54:09 +0800</pubDate>
      
      <guid>/post/csdn/usaco-section-1.3.3-barn-repair/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 题目 Barn Repair It was a dark and stormy night that ripped the roof and gates off the stalls that hold Farmer John&#39;s cows. Happily, many of the cows were on vacation, so the barn was not completely full. The cows spend the night in stalls that are arranged</description>
    </item>
    
    <item>
      <title>USACO Section 1.3.2 Mixing Milk</title>
      <link>/post/csdn/usaco-section-1.3.2-mixing-milk/</link>
      <pubDate>Wed, 22 May 2013 10:44:34 +0800</pubDate>
      
      <guid>/post/csdn/usaco-section-1.3.2-mixing-milk/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 题目 Mixing Milk Since milk packaging is such a low margin business, it is important to keep the price of the raw product (milk) as low as possible. Help Merry Milk Makers get the milk they need in the cheapest possible manner. The Merry Milk Makers company has several</description>
    </item>
    
    <item>
      <title>Linux 系统问题整理</title>
      <link>/post/csdn/linux-%E7%B3%BB%E7%BB%9F%E9%97%AE%E9%A2%98%E6%95%B4%E7%90%86/</link>
      <pubDate>Sun, 19 May 2013 21:13:42 +0800</pubDate>
      
      <guid>/post/csdn/linux-%E7%B3%BB%E7%BB%9F%E9%97%AE%E9%A2%98%E6%95%B4%E7%90%86/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 以下所有命令基于 ubuntu12.04 系统。centos、rhel 慎重 添加用户 useradd adduser 自动创建目录 添加 sudoers vim /etc/sudoers 修改主机名/机器</description>
    </item>
    
    <item>
      <title>点线计算</title>
      <link>/post/csdn/%E7%82%B9%E7%BA%BF%E8%AE%A1%E7%AE%97/</link>
      <pubDate>Sat, 18 May 2013 14:42:32 +0800</pubDate>
      
      <guid>/post/csdn/%E7%82%B9%E7%BA%BF%E8%AE%A1%E7%AE%97/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 #include &amp;lt;iostream&amp;gt; #include &amp;lt;cstdio&amp;gt; #include &amp;lt;cmath&amp;gt; using namespace std; struct Point{ double x,y; Point(){}; Point(double a,double b):x(a),y(b){} friend Point operator + (Point a,Point b){ return Point(a.x+b.x,a.y+b.y); } friend Point operator - (Point a,Point b){ return Point(a.x-b.x,a.y-b.y); } friend Point operator * (Point a,double b){ return Point(a.x*b,a.y*b); } friend Point operator</description>
    </item>
    
    <item>
      <title>JSON 入门笔记</title>
      <link>/post/csdn/json-%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Tue, 14 May 2013 12:49:58 +0800</pubDate>
      
      <guid>/post/csdn/json-%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 对象元素 obj = {&#34;name&#34;:&#34;Jom&#34;}; document.writeln(obj.name); 数组 obj = [&#34;name&#34;,&#34;Jom&#34;]; document.writeln(obj); 对象数组 obj = [{&#34;name&#34;:&#34;Jom&#34;}]; document.writeln(obj[0].name); 与字符串转换 txt = &#34;{\&#34;name\&#34;:\&#34;Jank\&#34;}&#34;; obj = eval(&#34;(&#34;+txt+&#34;)&#34;); document.writeln(obj.name); JSON的值： 数字（整数或浮点</description>
    </item>
    
    <item>
      <title>AJAX 入门笔记</title>
      <link>/post/csdn/ajax-%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Mon, 13 May 2013 13:59:15 +0800</pubDate>
      
      <guid>/post/csdn/ajax-%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 建立请求 var xmlhttp; if (window.XMLHttpRequest) {// code for IE7+, Firefox, Chrome, Opera, Safari xmlhttp=new XMLHttpRequest(); } else {// code for IE6, IE5 xmlhttp=new ActiveXObject(&#34;Microsoft.XMLHTTP&#34;); } 发送请求 xmlhttp.open(&#34;GET&#34;,&#34;kzzhr&#34;,true); xmlhttp.send(); aa 输出内容 xmlhttp.onreadystatechange=function(){ if (xmlhttp.readyState==4 &amp;amp;&amp;amp; xmlhttp.status==200){ document.getElementById(&#34;myDiv&#34;).innerHTML=xmlhttp.responseText; } } 放置数</description>
    </item>
    
    <item>
      <title>Linux 小白软件包整理</title>
      <link>/post/csdn/linux-%E5%B0%8F%E7%99%BD%E8%BD%AF%E4%BB%B6%E5%8C%85%E6%95%B4%E7%90%86/</link>
      <pubDate>Thu, 02 May 2013 16:31:35 +0800</pubDate>
      
      <guid>/post/csdn/linux-%E5%B0%8F%E7%99%BD%E8%BD%AF%E4%BB%B6%E5%8C%85%E6%95%B4%E7%90%86/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 软件源 linuxdeepin 不怎么入流，但是个人觉得在国内做的很用心的一个 注意linuxdeepin 用的命令是 apt-get ####Ubuntu 源##</description>
    </item>
    
    <item>
      <title>表达式计算</title>
      <link>/post/csdn/%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%AE%A1%E7%AE%97/</link>
      <pubDate>Tue, 30 Apr 2013 14:34:18 +0800</pubDate>
      
      <guid>/post/csdn/%E8%A1%A8%E8%BE%BE%E5%BC%8F%E8%AE%A1%E7%AE%97/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 题目 输入一个表达式，计算出它的值。运算符有 + - × / （ ）。 思路 这是我们学栈时碰到的一个问题，大体方法是</description>
    </item>
    
    <item>
      <title>Sublime Text 3 史上最性感的编辑器</title>
      <link>/post/csdn/sublime-text-3-%E5%8F%B2%E4%B8%8A%E6%9C%80%E6%80%A7%E6%84%9F%E7%9A%84%E7%BC%96%E8%BE%91%E5%99%A8/</link>
      <pubDate>Mon, 15 Apr 2013 17:42:40 +0800</pubDate>
      
      <guid>/post/csdn/sublime-text-3-%E5%8F%B2%E4%B8%8A%E6%9C%80%E6%80%A7%E6%84%9F%E7%9A%84%E7%BC%96%E8%BE%91%E5%99%A8/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 ↑ ↑ ↑ ↑ ↑ 请看目录 ↑ ↑ ↑ ↑ ↑ 下载 / 安装 windows / MAC OS 官网下载，双击安装，这个都会吧～ linux linux下安装，一</description>
    </item>
    
    <item>
      <title>POJ 1088 滑雪</title>
      <link>/post/csdn/poj-1088-%E6%BB%91%E9%9B%AA/</link>
      <pubDate>Sat, 23 Mar 2013 13:03:02 +0800</pubDate>
      
      <guid>/post/csdn/poj-1088-%E6%BB%91%E9%9B%AA/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 题目 http://poj.org/problem?id=1088 思路 经典的记忆化搜索：搜索+记忆化 搜索：一个一个找，能滑就滑 记忆化：优化重复的路径，记录每个点</description>
    </item>
    
    <item>
      <title>USACO Section 1.2.5 Palindromic Squares</title>
      <link>/post/csdn/usaco-section-1.2.5-palindromic-squares/</link>
      <pubDate>Mon, 11 Mar 2013 18:15:41 +0800</pubDate>
      
      <guid>/post/csdn/usaco-section-1.2.5-palindromic-squares/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 题目 Palindromic Squares Rob Kolstad Palindromes are numbers that read the same forwards as backwards. The number 12321 is a typical palindrome. Given a number base B (2 &amp;lt;= B &amp;lt;= 20 base 10), print all the integers N (1 &amp;lt;= N &amp;lt;= 300 base 10) such that the</description>
    </item>
    
    <item>
      <title>USACO Section 1.2.3 Transformations</title>
      <link>/post/csdn/usaco-section-1.2.3-transformations/</link>
      <pubDate>Mon, 11 Mar 2013 16:04:47 +0800</pubDate>
      
      <guid>/post/csdn/usaco-section-1.2.3-transformations/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 题目 Transformations A square pattern of size N x N (1 &amp;lt;= N &amp;lt;= 10) black and white square tiles is transformed into another square pattern. Write a program that will recognize the minimum transformation that has been applied to the original pattern given the following list of possible</description>
    </item>
    
    <item>
      <title>USACO Section 1.2.4 Name That Number</title>
      <link>/post/csdn/usaco-section-1.2.4-name-that-number/</link>
      <pubDate>Tue, 05 Mar 2013 13:20:17 +0800</pubDate>
      
      <guid>/post/csdn/usaco-section-1.2.4-name-that-number/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 题目 Name That Number Among the large Wisconsin cattle ranchers, it is customary to brand cows with serial numbers to please the Accounting Department. The cow hands don&#39;t appreciate the advantage of this filing system, though, and wish to call the members of their herd by a pleasing name</description>
    </item>
    
    <item>
      <title>USACO Section 1.2.2 Milking Cows</title>
      <link>/post/csdn/usaco-section-1.2.2-milking-cows/</link>
      <pubDate>Mon, 04 Mar 2013 22:23:21 +0800</pubDate>
      
      <guid>/post/csdn/usaco-section-1.2.2-milking-cows/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 题目 Milking Cows Three farmers rise at 5 am each morning and head for the barn to milk three cows. The first farmer begins milking his cow at time 300 (measured in seconds after 5 am) and ends at time 1000. The second farmer begins at time 700 and</description>
    </item>
    
    <item>
      <title>USACO Section 1.1.7 Broken Necklace</title>
      <link>/post/csdn/usaco-section-1.1.7-broken-necklace/</link>
      <pubDate>Mon, 04 Mar 2013 21:58:18 +0800</pubDate>
      
      <guid>/post/csdn/usaco-section-1.1.7-broken-necklace/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 题目 （由于USACO在外部无法直接访问题库，所以把题目贴上，可以通过上面的目录跳过） Broken Necklace You have a necklace of N</description>
    </item>
    
    <item>
      <title>假如女人是一种编程语言</title>
      <link>/post/csdn/%E5%81%87%E5%A6%82%E5%A5%B3%E4%BA%BA%E6%98%AF%E4%B8%80%E7%A7%8D%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/</link>
      <pubDate>Thu, 07 Feb 2013 17:24:42 +0800</pubDate>
      
      <guid>/post/csdn/%E5%81%87%E5%A6%82%E5%A5%B3%E4%BA%BA%E6%98%AF%E4%B8%80%E7%A7%8D%E7%BC%96%E7%A8%8B%E8%AF%AD%E8%A8%80/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 计算机语言的实质其实是为了让人类能够更好与计算机打交道，最终结果都是通过编译成二进制代码或通过解释器</description>
    </item>
    
    <item>
      <title>SAP算法心得 ~转的吧</title>
      <link>/post/csdn/sap%E7%AE%97%E6%B3%95%E5%BF%83%E5%BE%97-~%E8%BD%AC%E7%9A%84%E5%90%A7/</link>
      <pubDate>Tue, 05 Feb 2013 15:00:43 +0800</pubDate>
      
      <guid>/post/csdn/sap%E7%AE%97%E6%B3%95%E5%BF%83%E5%BE%97-~%E8%BD%AC%E7%9A%84%E5%90%A7/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 网络最大流算法是网络流算法的基础，实现方法很多，但时间复杂度与编程复杂 度难于兼顾。一方面，诸如预流推</description>
    </item>
    
    <item>
      <title>那些 Helloworld</title>
      <link>/post/csdn/%E9%82%A3%E4%BA%9B-helloworld/</link>
      <pubDate>Sat, 02 Feb 2013 09:22:11 +0800</pubDate>
      
      <guid>/post/csdn/%E9%82%A3%E4%BA%9B-helloworld/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 先看那六个变态的： intn[]={0x48, 0x65,0x6C,0x6C, 0x6F,0x2C,0x20, 0x77,0x6F,0x72, 0x6C,0x64,0x21, 0x0A,0x00},*m=n; main(n){putchar (*m)!=&#39;\0&#39;?main (m++):exit(n++);} #include &#34;stdafx.h&#34; int main(){int i,n[]={(((1&amp;lt;&amp;lt;1)&amp;lt;&amp;lt;(1&amp;lt;&amp;lt;1)&amp;lt;&amp;lt;(1&amp;lt;&amp;lt; 1)&amp;lt;&amp;lt;(1&amp;lt;&amp;lt;(1&amp;gt;&amp;gt;1)))+((1&amp;lt;&amp;lt;1)&amp;lt;&amp;lt;(1&amp;lt;&amp;lt;1))), (((1 &amp;lt;&amp;lt;1)&amp;lt;&amp;lt;(1&amp;lt;&amp;lt;1)&amp;lt;&amp;lt;(1&amp;lt;&amp;lt;1)&amp;lt;&amp;lt;(1&amp;lt;&amp;lt;1))-((1&amp;lt;&amp;lt;1)&amp;lt;&amp;lt;( 1&amp;lt;&amp;lt;1)&amp;lt;&amp;lt;(1&amp;lt;&amp;lt;1))+((1&amp;lt;&amp;lt;1)&amp;lt;&amp;lt;(1&amp;lt;&amp;lt;(1&amp;gt;&amp;gt;1)))+ (1 &amp;lt;&amp;lt;(1&amp;gt;&amp;gt;1))),(((1&amp;lt;&amp;lt;1)&amp;lt;&amp;lt;(1&amp;lt;&amp;lt;1)&amp;lt;&amp;lt;(1&amp;lt;&amp;lt;1)&amp;lt;&amp;lt; (1 &amp;lt;&amp;lt;1))-((1&amp;lt;&amp;lt;1)&amp;lt;&amp;lt;(1&amp;lt;&amp;lt;1)&amp;lt;&amp;lt;(1&amp;lt;&amp;lt;(1&amp;gt;&amp;gt;1)))- ((1 &amp;lt;&amp;lt;1)&amp;lt;&amp;lt;(1&amp;lt;&amp;lt;(1&amp;gt;&amp;gt;1)))),(((1&amp;lt;&amp;lt;1)&amp;lt;&amp;lt;(1&amp;lt;&amp;lt;1)&amp;lt;&amp;lt;(1 &amp;lt;&amp;lt;1)&amp;lt;&amp;lt;(1&amp;lt;&amp;lt;1))-((1&amp;lt;&amp;lt;1)&amp;lt;&amp;lt;(1&amp;lt;&amp;lt;1)&amp;lt;&amp;lt;(1&amp;lt;&amp;lt;(1&amp;gt;&amp;gt;1 )))-((1&amp;lt;&amp;lt;1)&amp;lt;&amp;lt;(1&amp;lt;&amp;lt;(1&amp;gt;&amp;gt;1)))),(((1&amp;lt;&amp;lt;1)&amp;lt;&amp;lt; (1 &amp;lt;&amp;lt;1)&amp;lt;&amp;lt;(1&amp;lt;&amp;lt;1)&amp;lt;&amp;lt;(1&amp;lt;&amp;lt;1))-((1&amp;lt;&amp;lt;1)&amp;lt;&amp;lt;(1&amp;lt;&amp;lt;1)&amp;lt;&amp;lt;( 1&amp;lt;&amp;lt;(1&amp;gt;&amp;gt;1)))-(1&amp;lt;&amp;lt;(1&amp;gt;&amp;gt;1))),(((1&amp;lt;&amp;lt;1)&amp;lt;&amp;lt;(1&amp;lt;&amp;lt;1 )&amp;lt;&amp;lt;(1&amp;lt;&amp;lt;1))+((1&amp;lt;&amp;lt;1)&amp;lt;&amp;lt;(1&amp;lt;&amp;lt;1)&amp;lt;&amp;lt;(1&amp;lt;&amp;lt;(1&amp;gt;&amp;gt;1))) -((1&amp;lt;&amp;lt;1)&amp;lt;&amp;lt;(1&amp;lt;&amp;lt;(1&amp;gt;&amp;gt;1)))),((1&amp;lt;&amp;lt;1)&amp;lt;&amp;lt; (1&amp;lt;&amp;lt;1) &amp;lt;&amp;lt;(1&amp;lt;&amp;lt;1)),(((1&amp;lt;&amp;lt;1)&amp;lt;&amp;lt;(1&amp;lt;&amp;lt;1)&amp;lt;&amp;lt;(1&amp;lt;&amp;lt;1)&amp;lt;&amp;lt;(1&amp;lt;&amp;lt; 1))-((1&amp;lt;&amp;lt;1)&amp;lt;&amp;lt;(1&amp;lt;&amp;lt;1))-(1&amp;lt;&amp;lt;(1&amp;gt;&amp;gt;1))),(((1&amp;lt;&amp;lt; 1)&amp;lt;&amp;lt;(1&amp;lt;&amp;lt;1)&amp;lt;&amp;lt;(1&amp;lt;&amp;lt;1)&amp;lt;&amp;lt;(1&amp;lt;&amp;lt;1))-((1&amp;lt;&amp;lt;1)&amp;lt;&amp;lt; (1 &amp;lt;&amp;lt;1)&amp;lt;&amp;lt;(1&amp;lt;&amp;lt;(1&amp;gt;&amp;gt;1)))-(1&amp;lt;&amp;lt;(1&amp;gt;&amp;gt;1))), (((1&amp;lt;&amp;lt;1 )&amp;lt;&amp;lt;(1&amp;lt;&amp;lt;1)&amp;lt;&amp;lt;(1&amp;lt;&amp;lt;1)&amp;lt;&amp;lt;(1&amp;lt;&amp;lt;1))- ((1&amp;lt;&amp;lt;1)&amp;lt;&amp;lt; (1</description>
    </item>
    
    <item>
      <title>jQuery 入门笔记</title>
      <link>/post/csdn/jquery-%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0/</link>
      <pubDate>Fri, 01 Feb 2013 20:35:14 +0800</pubDate>
      
      <guid>/post/csdn/jquery-%E5%85%A5%E9%97%A8%E7%AC%94%E8%AE%B0/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 添加jQuery库： &amp;lt;script src=&#34;http://ajax.googleapis.com/ajax/libs/jquery/1.9.0/jquery.min.js&#34;&amp;gt;&amp;lt;/script&amp;gt; PS： ../1/.. 可以找到1.*.* 的最高版本。 2.0.2 不再支持IE8- jQuery语法： $(selector).action()</description>
    </item>
    
    <item>
      <title>POJ 题目分类与计划</title>
      <link>/post/csdn/poj-%E9%A2%98%E7%9B%AE%E5%88%86%E7%B1%BB%E4%B8%8E%E8%AE%A1%E5%88%92/</link>
      <pubDate>Thu, 31 Jan 2013 14:41:53 +0800</pubDate>
      
      <guid>/post/csdn/poj-%E9%A2%98%E7%9B%AE%E5%88%86%E7%B1%BB%E4%B8%8E%E8%AE%A1%E5%88%92/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 初期: 一.基本算法: (1)枚举. (poj1753,poj2965) (2)贪心(poj1328,poj2109,poj2586) (3)</description>
    </item>
    
    <item>
      <title>HDOJ - 1318 Palindromes</title>
      <link>/post/csdn/hdoj-1318-palindromes/</link>
      <pubDate>Thu, 17 Jan 2013 13:36:47 +0800</pubDate>
      
      <guid>/post/csdn/hdoj-1318-palindromes/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 题目： http://acm.hdu.edu.cn/showproblem.php?pid=1318 一般的字符串处理问题，一个共性：思路简单，代码繁琐。 譬如此题，首先会有一个问题要考虑：如何去</description>
    </item>
    
    <item>
      <title>一些随便 更新中。。</title>
      <link>/post/csdn/%E4%B8%80%E4%BA%9B%E9%9A%8F%E4%BE%BF-%E6%9B%B4%E6%96%B0%E4%B8%AD/</link>
      <pubDate>Wed, 09 Jan 2013 19:37:01 +0800</pubDate>
      
      <guid>/post/csdn/%E4%B8%80%E4%BA%9B%E9%9A%8F%E4%BE%BF-%E6%9B%B4%E6%96%B0%E4%B8%AD/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 字体： http://url.cn/CtKsBe linux默认字体 http://url.cn/ClMeMA 苹果系统默认编程字体 http://url.cn/DNLRS8 一种不错的汉英搭配个人感觉 http://url.cn/A4NRay 这个，是我以前的编程字</description>
    </item>
    
    <item>
      <title>C语言初探 之 printf压栈顺序</title>
      <link>/post/csdn/c%E8%AF%AD%E8%A8%80%E5%88%9D%E6%8E%A2-%E4%B9%8B-printf%E5%8E%8B%E6%A0%88%E9%A1%BA%E5%BA%8F/</link>
      <pubDate>Tue, 08 Jan 2013 19:53:44 +0800</pubDate>
      
      <guid>/post/csdn/c%E8%AF%AD%E8%A8%80%E5%88%9D%E6%8E%A2-%E4%B9%8B-printf%E5%8E%8B%E6%A0%88%E9%A1%BA%E5%BA%8F/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 写在篇头： 在不同的编译器下结果不同，本例测试的环境为 devcpp5.3.0.1 。 ——————————————————————</description>
    </item>
    
    <item>
      <title>C语言初探 之 %p</title>
      <link>/post/csdn/c%E8%AF%AD%E8%A8%80%E5%88%9D%E6%8E%A2-%E4%B9%8B-p/</link>
      <pubDate>Fri, 04 Jan 2013 13:37:02 +0800</pubDate>
      
      <guid>/post/csdn/c%E8%AF%AD%E8%A8%80%E5%88%9D%E6%8E%A2-%E4%B9%8B-p/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 先看代码： int a=16,b=17,c=18; int *p,*q,*g; p=&amp;amp;a;q=&amp;amp;b;g=&amp;amp;c; printf(&#34;%p %p %p\n&#34;,a,b,c); printf(&#34;%p %p %p\n&#34;,&amp;amp;a,&amp;amp;b,&amp;amp;c); printf(&#34;%8x %8x %8x\n&#34;,&amp;amp;a,&amp;amp;b,&amp;amp;c); printf(&#34;%8x %8x %8x\n&#34;,p,q,g); %x 只是把同样的数值以不同的形式输出而已，因此如果要寻址，</description>
    </item>
    
    <item>
      <title>数字根介绍</title>
      <link>/post/csdn/%E6%95%B0%E5%AD%97%E6%A0%B9%E4%BB%8B%E7%BB%8D/</link>
      <pubDate>Tue, 27 Nov 2012 09:26:36 +0800</pubDate>
      
      <guid>/post/csdn/%E6%95%B0%E5%AD%97%E6%A0%B9%E4%BB%8B%E7%BB%8D/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 数字根 参考链接： http://blog.renren.com/share/334504317/8581660295#nogo 定义 数字根（ Digital Root ）就是把一个数的各位数字相加，再将所得数的各位数字相加，直到所得数</description>
    </item>
    
    <item>
      <title>HDOJ - 2045 RPG难题</title>
      <link>/post/csdn/hdoj-2045-rpg%E9%9A%BE%E9%A2%98/</link>
      <pubDate>Thu, 22 Nov 2012 21:01:27 +0800</pubDate>
      
      <guid>/post/csdn/hdoj-2045-rpg%E9%9A%BE%E9%A2%98/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 题目地址： http://acm.hdu.edu.cn/showproblem.php?pid=2045 算法思想： 1）有三种颜色，在涂某一块区域时，由于它的前一块区域已经确定，且相邻区域不能重</description>
    </item>
    
    <item>
      <title>HDOJ – 2043 密码</title>
      <link>/post/csdn/hdoj-2043-%E5%AF%86%E7%A0%81/</link>
      <pubDate>Thu, 22 Nov 2012 19:17:42 +0800</pubDate>
      
      <guid>/post/csdn/hdoj-2043-%E5%AF%86%E7%A0%81/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 题目地址： http://acm.hdu.edu.cn/showproblem.php?pid=2043 最基础的模拟题目，只要按照题目给出的要求进行判断即可。 代码如下： #include&amp;lt;iostream&amp;gt; #include&amp;lt;string&amp;gt; using namespace std; const string s=&#34;~!@#$%^&#34;; string ss; int n;</description>
    </item>
    
    <item>
      <title>Qtree_testing</title>
      <link>/post/csdn/qtree_testing/</link>
      <pubDate>Tue, 20 Nov 2012 13:14:53 +0800</pubDate>
      
      <guid>/post/csdn/qtree_testing/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 testing... #include &amp;lt;cstdio&amp;gt; #include &amp;lt;cstring&amp;gt; #include &amp;lt;cstdlib&amp;gt; #include &amp;lt;cmath&amp;gt; using namespace std; const int maxn=10010; const int maxm=maxn*2; const int maxu=maxn*4; const int maxt=maxn*10; const int oo=1993101215; int test,n,e,indexs,dep,tot,lca,debug; int id; //重链编号 int node; //线段树节点 int pre[maxm],other[maxm],last[maxm],w[maxm]; //</description>
    </item>
    
    <item>
      <title>用程序去判断每个人说话的真假 - 写给新手的枚举介绍</title>
      <link>/post/csdn/%E7%94%A8%E7%A8%8B%E5%BA%8F%E5%8E%BB%E5%88%A4%E6%96%AD%E6%AF%8F%E4%B8%AA%E4%BA%BA%E8%AF%B4%E8%AF%9D%E7%9A%84%E7%9C%9F%E5%81%87-%E5%86%99%E7%BB%99%E6%96%B0%E6%89%8B%E7%9A%84%E6%9E%9A%E4%B8%BE%E4%BB%8B%E7%BB%8D/</link>
      <pubDate>Sat, 13 Oct 2012 11:09:11 +0800</pubDate>
      
      <guid>/post/csdn/%E7%94%A8%E7%A8%8B%E5%BA%8F%E5%8E%BB%E5%88%A4%E6%96%AD%E6%AF%8F%E4%B8%AA%E4%BA%BA%E8%AF%B4%E8%AF%9D%E7%9A%84%E7%9C%9F%E5%81%87-%E5%86%99%E7%BB%99%E6%96%B0%E6%89%8B%E7%9A%84%E6%9E%9A%E4%B8%BE%E4%BB%8B%E7%BB%8D/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 背景 我们在以前的数学题中一定遇到过这样的问题： A说xxxx B说xxx C说xxx 然后给一些条件，让你判</description>
    </item>
    
  </channel>
</rss>
