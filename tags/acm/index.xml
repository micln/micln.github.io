<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>ACM on 在水异方</title>
    <link>/tags/acm/</link>
    <description>Recent content in ACM on 在水异方</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>zh-Hans</language>
    <copyright>©{year} 在水异方</copyright>
    <lastBuildDate>Tue, 30 Sep 2014 17:20:25 +0800</lastBuildDate><atom:link href="/tags/acm/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>UVa 437 The Tower of Babylon</title>
      <link>/post/csdn/uva-437-the-tower-of-babylon/</link>
      <pubDate>Tue, 30 Sep 2014 17:20:25 +0800</pubDate>
      
      <guid>/post/csdn/uva-437-the-tower-of-babylon/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 好久不水 开始深入算法了。 题目传送门 题目其实很简单，暴搜都可以，网上最多的解法都是记忆化搜索，效率应该</description>
    </item>
    
    <item>
      <title>UVa 10129 Play on Words</title>
      <link>/post/csdn/uva-10129-play-on-words/</link>
      <pubDate>Thu, 14 Aug 2014 20:54:58 +0800</pubDate>
      
      <guid>/post/csdn/uva-10129-play-on-words/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 好久不写代码果然手会生成屎 题目在 poj上也有 题意就是给你一堆单词，按首位顺序排列起来，问你有没有解。</description>
    </item>
    
    <item>
      <title>POJ 1017 Packets 悼念死去的模拟</title>
      <link>/post/csdn/poj-1017-packets-%E6%82%BC%E5%BF%B5%E6%AD%BB%E5%8E%BB%E7%9A%84%E6%A8%A1%E6%8B%9F/</link>
      <pubDate>Fri, 18 Jul 2014 18:51:34 +0800</pubDate>
      
      <guid>/post/csdn/poj-1017-packets-%E6%82%BC%E5%BF%B5%E6%AD%BB%E5%8E%BB%E7%9A%84%E6%A8%A1%E6%8B%9F/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 题目链接 题目很水，纯模拟 麻烦的地方在于，会面临多次用小件填充大件剩余。 最开始觉得不同大小时决策不一样</description>
    </item>
    
    <item>
      <title>POJ 1273 Drainage Ditches 网络流模版</title>
      <link>/post/csdn/poj-1273-drainage-ditches-%E7%BD%91%E7%BB%9C%E6%B5%81%E6%A8%A1%E7%89%88/</link>
      <pubDate>Wed, 02 Apr 2014 22:57:45 +0800</pubDate>
      
      <guid>/post/csdn/poj-1273-drainage-ditches-%E7%BD%91%E7%BB%9C%E6%B5%81%E6%A8%A1%E7%89%88/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 题目传送门 网络流模版题，本想水一水，莫想到因为没好好看题给跪了。 题目大意就是 给你一堆水洼地，还有一些</description>
    </item>
    
    <item>
      <title>POJ 3321 Apple Tree dfs序的应用</title>
      <link>/post/csdn/poj-3321-apple-tree-dfs%E5%BA%8F%E7%9A%84%E5%BA%94%E7%94%A8/</link>
      <pubDate>Mon, 31 Mar 2014 09:56:24 +0800</pubDate>
      
      <guid>/post/csdn/poj-3321-apple-tree-dfs%E5%BA%8F%E7%9A%84%E5%BA%94%E7%94%A8/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 题目链接 dfs序 说来很简单，却从来没有想到过。必须得深刻反省一下到底自己学了些啥。 题目大意是给你一棵</description>
    </item>
    
    <item>
      <title>POJ 3461 Oulipo KMP练习</title>
      <link>/post/csdn/poj-3461-oulipo-kmp%E7%BB%83%E4%B9%A0/</link>
      <pubDate>Mon, 31 Mar 2014 09:34:47 +0800</pubDate>
      
      <guid>/post/csdn/poj-3461-oulipo-kmp%E7%BB%83%E4%B9%A0/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 题目链接 题目很长，其实就是字符串匹配。 所以，权当练习 KMP #include &amp;lt;cstdio&amp;gt; #include &amp;lt;cstring&amp;gt; #define MB 10101 #define MA 1000100 char a[MA],b[MB]; int next[MB]; void prekmp(char* b) { next[0]=-1; int j=-1; for (</description>
    </item>
    
    <item>
      <title>USACO Section 1.4.3 The Clocks</title>
      <link>/post/csdn/usaco-section-1.4.3-the-clocks/</link>
      <pubDate>Thu, 28 Nov 2013 16:37:01 +0800</pubDate>
      
      <guid>/post/csdn/usaco-section-1.4.3-the-clocks/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 题目 The Clocks IOI&#39;94 - Day 2 Consider nine clocks arranged in a 3x3 array thusly: |-------| |-------| |-------| | | | | | | | |---O | |---O | | O | | | | | | | |-------| |-------| |-------| A B C |&amp;mdash;&amp;mdash;-| |&amp;mdash;&amp;mdash;-| |&amp;mdash;&amp;mdash;-| |</description>
    </item>
    
    <item>
      <title>POJ 3041 Asteroids 匈牙利算法 二分图最大匹配</title>
      <link>/post/csdn/poj-3041-asteroids-%E5%8C%88%E7%89%99%E5%88%A9%E7%AE%97%E6%B3%95-%E4%BA%8C%E5%88%86%E5%9B%BE%E6%9C%80%E5%A4%A7%E5%8C%B9%E9%85%8D/</link>
      <pubDate>Fri, 15 Nov 2013 16:23:18 +0800</pubDate>
      
      <guid>/post/csdn/poj-3041-asteroids-%E5%8C%88%E7%89%99%E5%88%A9%E7%AE%97%E6%B3%95-%E4%BA%8C%E5%88%86%E5%9B%BE%E6%9C%80%E5%A4%A7%E5%8C%B9%E9%85%8D/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 题目链接： http://poj.org/problem?id=3041 看起来像个 DP 神马的。竟然是二分图匹配。。 看着啊，行与行之间相互独立，一个行可以就炸掉很多</description>
    </item>
    
    <item>
      <title>ubuntu 安装 HUSTOJ</title>
      <link>/post/csdn/ubuntu-%E5%AE%89%E8%A3%85-hustoj/</link>
      <pubDate>Wed, 16 Oct 2013 01:46:40 +0800</pubDate>
      
      <guid>/post/csdn/ubuntu-%E5%AE%89%E8%A3%85-hustoj/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 安装好 LAMP 环境 方法： http://blog.csdn.net/kzzhr/article/details/12755671 下载 HUSTOJ HUSTOJ 主页 http://code.google.com/p/hustoj/ 我下载了 安装包 install.rxxxx.tar.gz 上传至服务器 #scp -r /home/foo/isntall foo@xxx.xx.xxx.xxx:/var/www 安装中的那些事儿～ install/README 中有详细的</description>
    </item>
    
    <item>
      <title>HOJ 2651 PIE</title>
      <link>/post/csdn/hoj-2651-pie/</link>
      <pubDate>Thu, 27 Jun 2013 16:56:29 +0800</pubDate>
      
      <guid>/post/csdn/hoj-2651-pie/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 题目： http://acm.hit.edu.cn/hoj/problem/view?id=2651 很简单的二分枚举， 要注意的是 1、一共是 f+1 个人（包括他自己） 2、精度问题。。被吭了好久，我把面</description>
    </item>
    
    <item>
      <title>HDOJ 4152 ZZY’s Dilemma</title>
      <link>/post/csdn/hdoj-4152-zzys-dilemma/</link>
      <pubDate>Thu, 27 Jun 2013 02:38:45 +0800</pubDate>
      
      <guid>/post/csdn/hdoj-4152-zzys-dilemma/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 题目： http://acm.hdu.edu.cn/showproblem.php?pid=4152 队长大人给某菜鸟赛出的题，但是却让我傻了半天。 裸暴力，由于数据弱，我直接用了位运算标记，其实</description>
    </item>
    
    <item>
      <title>ZOJ 3203 Light Bulb</title>
      <link>/post/csdn/zoj-3203-light-bulb/</link>
      <pubDate>Thu, 27 Jun 2013 02:34:39 +0800</pubDate>
      
      <guid>/post/csdn/zoj-3203-light-bulb/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 题目： http://openoj.awaysoft.com:8080/judge/problem/viewProblem.action?id=14179 三分入门题目 三分： 区间上求凸（凹）点时，把区间ad分为 abcd 其中 b = ( a+d) / 2 ; c = ( b + d) / 2; 比</description>
    </item>
    
    <item>
      <title>USACO Section 1.3.6 Prime Cryptarithm</title>
      <link>/post/csdn/usaco-section-1.3.6-prime-cryptarithm/</link>
      <pubDate>Wed, 22 May 2013 11:07:06 +0800</pubDate>
      
      <guid>/post/csdn/usaco-section-1.3.6-prime-cryptarithm/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 题目 Prime Cryptarithm The following cryptarithm is a multiplication problem that can be solved by substituting digits from a specified set of N digits into the positions marked with *. If the set of prime digits {2,3,5,7} is selected, the cryptarithm is called a PRIME CRYPTARITHM. * * *</description>
    </item>
    
    <item>
      <title>USACO Section 1.3.5 Calf Flac</title>
      <link>/post/csdn/usaco-section-1.3.5-calf-flac/</link>
      <pubDate>Wed, 22 May 2013 11:03:07 +0800</pubDate>
      
      <guid>/post/csdn/usaco-section-1.3.5-calf-flac/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 题目 Calf Flac It is said that if you give an infinite number of cows an infinite number of heavy-duty laptops (with very large keys), that they will ultimately produce all the world&#39;s great palindromes. Your job will be to detect these bovine beauties. Ignore punctuation, whitespace, numbers, and</description>
    </item>
    
    <item>
      <title>USACO Section 1.3.3 Barn Repair</title>
      <link>/post/csdn/usaco-section-1.3.3-barn-repair/</link>
      <pubDate>Wed, 22 May 2013 10:54:09 +0800</pubDate>
      
      <guid>/post/csdn/usaco-section-1.3.3-barn-repair/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 题目 Barn Repair It was a dark and stormy night that ripped the roof and gates off the stalls that hold Farmer John&#39;s cows. Happily, many of the cows were on vacation, so the barn was not completely full. The cows spend the night in stalls that are arranged</description>
    </item>
    
    <item>
      <title>USACO Section 1.3.2 Mixing Milk</title>
      <link>/post/csdn/usaco-section-1.3.2-mixing-milk/</link>
      <pubDate>Wed, 22 May 2013 10:44:34 +0800</pubDate>
      
      <guid>/post/csdn/usaco-section-1.3.2-mixing-milk/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 题目 Mixing Milk Since milk packaging is such a low margin business, it is important to keep the price of the raw product (milk) as low as possible. Help Merry Milk Makers get the milk they need in the cheapest possible manner. The Merry Milk Makers company has several</description>
    </item>
    
    <item>
      <title>POJ 1088 滑雪</title>
      <link>/post/csdn/poj-1088-%E6%BB%91%E9%9B%AA/</link>
      <pubDate>Sat, 23 Mar 2013 13:03:02 +0800</pubDate>
      
      <guid>/post/csdn/poj-1088-%E6%BB%91%E9%9B%AA/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 题目 http://poj.org/problem?id=1088 思路 经典的记忆化搜索：搜索+记忆化 搜索：一个一个找，能滑就滑 记忆化：优化重复的路径，记录每个点</description>
    </item>
    
    <item>
      <title>USACO Section 1.2.5 Palindromic Squares</title>
      <link>/post/csdn/usaco-section-1.2.5-palindromic-squares/</link>
      <pubDate>Mon, 11 Mar 2013 18:15:41 +0800</pubDate>
      
      <guid>/post/csdn/usaco-section-1.2.5-palindromic-squares/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 题目 Palindromic Squares Rob Kolstad Palindromes are numbers that read the same forwards as backwards. The number 12321 is a typical palindrome. Given a number base B (2 &amp;lt;= B &amp;lt;= 20 base 10), print all the integers N (1 &amp;lt;= N &amp;lt;= 300 base 10) such that the</description>
    </item>
    
    <item>
      <title>USACO Section 1.2.3 Transformations</title>
      <link>/post/csdn/usaco-section-1.2.3-transformations/</link>
      <pubDate>Mon, 11 Mar 2013 16:04:47 +0800</pubDate>
      
      <guid>/post/csdn/usaco-section-1.2.3-transformations/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 题目 Transformations A square pattern of size N x N (1 &amp;lt;= N &amp;lt;= 10) black and white square tiles is transformed into another square pattern. Write a program that will recognize the minimum transformation that has been applied to the original pattern given the following list of possible</description>
    </item>
    
    <item>
      <title>USACO Section 1.2.4 Name That Number</title>
      <link>/post/csdn/usaco-section-1.2.4-name-that-number/</link>
      <pubDate>Tue, 05 Mar 2013 13:20:17 +0800</pubDate>
      
      <guid>/post/csdn/usaco-section-1.2.4-name-that-number/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 题目 Name That Number Among the large Wisconsin cattle ranchers, it is customary to brand cows with serial numbers to please the Accounting Department. The cow hands don&#39;t appreciate the advantage of this filing system, though, and wish to call the members of their herd by a pleasing name</description>
    </item>
    
    <item>
      <title>USACO Section 1.2.2 Milking Cows</title>
      <link>/post/csdn/usaco-section-1.2.2-milking-cows/</link>
      <pubDate>Mon, 04 Mar 2013 22:23:21 +0800</pubDate>
      
      <guid>/post/csdn/usaco-section-1.2.2-milking-cows/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 题目 Milking Cows Three farmers rise at 5 am each morning and head for the barn to milk three cows. The first farmer begins milking his cow at time 300 (measured in seconds after 5 am) and ends at time 1000. The second farmer begins at time 700 and</description>
    </item>
    
    <item>
      <title>USACO Section 1.1.7 Broken Necklace</title>
      <link>/post/csdn/usaco-section-1.1.7-broken-necklace/</link>
      <pubDate>Mon, 04 Mar 2013 21:58:18 +0800</pubDate>
      
      <guid>/post/csdn/usaco-section-1.1.7-broken-necklace/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 题目 （由于USACO在外部无法直接访问题库，所以把题目贴上，可以通过上面的目录跳过） Broken Necklace You have a necklace of N</description>
    </item>
    
    <item>
      <title>POJ 题目分类与计划</title>
      <link>/post/csdn/poj-%E9%A2%98%E7%9B%AE%E5%88%86%E7%B1%BB%E4%B8%8E%E8%AE%A1%E5%88%92/</link>
      <pubDate>Thu, 31 Jan 2013 14:41:53 +0800</pubDate>
      
      <guid>/post/csdn/poj-%E9%A2%98%E7%9B%AE%E5%88%86%E7%B1%BB%E4%B8%8E%E8%AE%A1%E5%88%92/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 初期: 一.基本算法: (1)枚举. (poj1753,poj2965) (2)贪心(poj1328,poj2109,poj2586) (3)</description>
    </item>
    
    <item>
      <title>HDOJ - 1318 Palindromes</title>
      <link>/post/csdn/hdoj-1318-palindromes/</link>
      <pubDate>Thu, 17 Jan 2013 13:36:47 +0800</pubDate>
      
      <guid>/post/csdn/hdoj-1318-palindromes/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 题目： http://acm.hdu.edu.cn/showproblem.php?pid=1318 一般的字符串处理问题，一个共性：思路简单，代码繁琐。 譬如此题，首先会有一个问题要考虑：如何去</description>
    </item>
    
    <item>
      <title>HDOJ - 2045 RPG难题</title>
      <link>/post/csdn/hdoj-2045-rpg%E9%9A%BE%E9%A2%98/</link>
      <pubDate>Thu, 22 Nov 2012 21:01:27 +0800</pubDate>
      
      <guid>/post/csdn/hdoj-2045-rpg%E9%9A%BE%E9%A2%98/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 题目地址： http://acm.hdu.edu.cn/showproblem.php?pid=2045 算法思想： 1）有三种颜色，在涂某一块区域时，由于它的前一块区域已经确定，且相邻区域不能重</description>
    </item>
    
    <item>
      <title>HDOJ – 2043 密码</title>
      <link>/post/csdn/hdoj-2043-%E5%AF%86%E7%A0%81/</link>
      <pubDate>Thu, 22 Nov 2012 19:17:42 +0800</pubDate>
      
      <guid>/post/csdn/hdoj-2043-%E5%AF%86%E7%A0%81/</guid>
      <description>此页面通过工具从 csdn 导出，格式可能有问题。 题目地址： http://acm.hdu.edu.cn/showproblem.php?pid=2043 最基础的模拟题目，只要按照题目给出的要求进行判断即可。 代码如下： #include&amp;lt;iostream&amp;gt; #include&amp;lt;string&amp;gt; using namespace std; const string s=&#34;~!@#$%^&#34;; string ss; int n;</description>
    </item>
    
  </channel>
</rss>
